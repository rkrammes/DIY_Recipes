import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { AuthProvider } from "../providers/AuthProvider";
import { ThemeProvider } from "../providers/ThemeProvider";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {/* Production Analytics Placeholder */}
        {process.env.NODE_ENV === 'production' && (
          <>
            {/* Replace with actual analytics script or component */}
            {/* <script async src="https://www.example.com/analytics.js"></script> */}
            {/* Or a component: <AnalyticsProvider /> */}
            {console.log('Analytics placeholder active in production')}
          </>
        )}

        {/* Production Monitoring Placeholder */}
        {process.env.NODE_ENV === 'production' && (
          <>
            {/* Replace with actual monitoring script or component */}
            {/* <script src="https://www.example.com/monitoring.js"></script> */}
            {/* Or a component: <MonitoringProvider /> */}
            {console.log('Monitoring placeholder active in production')}
          </>
        )}

        <AuthProvider>
          <ThemeProvider>
            {children}
          </ThemeProvider>
        </AuthProvider>
      </body>
    </html>
  );
}
